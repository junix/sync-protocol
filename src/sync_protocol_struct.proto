package sync.protocol;

enum message_type_t {
    SYNC_SUBSCRIBE_REQ    = 1;
    SYNC_SUBSCRIBE_REP    = 2;
    SYNC_UNSUBSCRIBE_REQ  = 3;
    SYNC_CLIENT_HEARTBEAT = 4;
    SYNC_SERVER_HEARTBEAT = 5;
    SYNC_FROM             = 7;
    SYNC                  = 8;
}

message subscribe_req {
    required uint64 user_id = 1;
    required string session_key = 2;
}

message subscribe_rep {
    required uint32 code = 1;
}

message unsubscribe_req {
    required uint64 user_id = 1;
    required string session_key = 2;
}

message client_heartbeat {
}

message server_heartbeat {
}

message event {
    required uint64 id = 1;
    required bytes payload = 2;
    required uint32 date_added = 3;
}

message sync_from {
    required uint64 from = 1;
    required uint64 limit = 2;
}

message sync {
    required uint64 latest_id = 1;
    repeated event events = 2;
}
